/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var frontier_v1_resources_pb = require('../frontier/v1/resources_pb.js');
goog.object.extend(proto, frontier_v1_resources_pb);
var veidemann_api_messages_pb = require('../veidemann_api/messages_pb.js');
goog.object.extend(proto, veidemann_api_messages_pb);
var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$swagger_options_annotations_pb = require('../protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
goog.exportSymbol('proto.veidemann.api.CrawlLogListReply', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlLogListRequest', null, global);
goog.exportSymbol('proto.veidemann.api.ExecuteDbQueryReply', null, global);
goog.exportSymbol('proto.veidemann.api.ExecuteDbQueryRequest', null, global);
goog.exportSymbol('proto.veidemann.api.Filter', null, global);
goog.exportSymbol('proto.veidemann.api.Filter.Operator', null, global);
goog.exportSymbol('proto.veidemann.api.PageLogListReply', null, global);
goog.exportSymbol('proto.veidemann.api.PageLogListRequest', null, global);
goog.exportSymbol('proto.veidemann.api.ScreenshotListReply', null, global);
goog.exportSymbol('proto.veidemann.api.ScreenshotListRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.Filter.displayName = 'proto.veidemann.api.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlLogListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlLogListRequest.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlLogListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlLogListRequest.displayName = 'proto.veidemann.api.CrawlLogListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlLogListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlLogListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlLogListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlLogListReply.displayName = 'proto.veidemann.api.CrawlLogListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.PageLogListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.PageLogListRequest.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.PageLogListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.PageLogListRequest.displayName = 'proto.veidemann.api.PageLogListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.PageLogListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.PageLogListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.PageLogListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.PageLogListReply.displayName = 'proto.veidemann.api.PageLogListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.ScreenshotListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.ScreenshotListRequest.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.ScreenshotListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.ScreenshotListRequest.displayName = 'proto.veidemann.api.ScreenshotListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.ScreenshotListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.ScreenshotListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.ScreenshotListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.ScreenshotListReply.displayName = 'proto.veidemann.api.ScreenshotListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.ExecuteDbQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.ExecuteDbQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.ExecuteDbQueryRequest.displayName = 'proto.veidemann.api.ExecuteDbQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.ExecuteDbQueryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.ExecuteDbQueryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.ExecuteDbQueryReply.displayName = 'proto.veidemann.api.ExecuteDbQueryReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Filter.toObject = function(includeInstance, msg) {
  var obj = {
    fieldName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    op: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.Filter}
 */
proto.veidemann.api.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.Filter;
  return proto.veidemann.api.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.Filter}
 */
proto.veidemann.api.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldName(value);
      break;
    case 2:
      var value = /** @type {!proto.veidemann.api.Filter.Operator} */ (reader.readEnum());
      msg.setOp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.Filter.Operator = {
  EQ: 0,
  NE: 1,
  MATCH: 2,
  LT: 3,
  GT: 4
};

/**
 * optional string field_name = 1;
 * @return {string}
 */
proto.veidemann.api.Filter.prototype.getFieldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.Filter.prototype.setFieldName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


Object.defineProperty(proto.veidemann.api.Filter.prototype, "fieldName", {
  set: function(value) {
    this.setFieldName(value);
  },
  get: function() {
    return this.getFieldName();
  },
});


/**
 * optional Operator op = 2;
 * @return {!proto.veidemann.api.Filter.Operator}
 */
proto.veidemann.api.Filter.prototype.getOp = function() {
  return /** @type {!proto.veidemann.api.Filter.Operator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.veidemann.api.Filter.Operator} value */
proto.veidemann.api.Filter.prototype.setOp = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.Filter.prototype, "op", {
  set: function(value) {
    this.setOp(value);
  },
  get: function() {
    return this.getOp();
  },
});


/**
 * optional string value = 3;
 * @return {string}
 */
proto.veidemann.api.Filter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.Filter.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


Object.defineProperty(proto.veidemann.api.Filter.prototype, "value", {
  set: function(value) {
    this.setValue(value);
  },
  get: function() {
    return this.getValue();
  },
});



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlLogListRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlLogListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlLogListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlLogListRequest.toObject = function(includeInstance, msg) {
  var obj = {
    warcIdList: jspb.Message.getRepeatedField(msg, 1),
    executionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filterList: jspb.Message.toObjectList(msg.getFilterList(),
    proto.veidemann.api.Filter.toObject, includeInstance),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlLogListRequest}
 */
proto.veidemann.api.CrawlLogListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlLogListRequest;
  return proto.veidemann.api.CrawlLogListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlLogListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlLogListRequest}
 */
proto.veidemann.api.CrawlLogListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addWarcId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 3:
      var value = new proto.veidemann.api.Filter;
      reader.readMessage(value,proto.veidemann.api.Filter.deserializeBinaryFromReader);
      msg.addFilter(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlLogListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlLogListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlLogListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWarcIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.veidemann.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated string warc_id = 1;
 * @return {!Array<string>}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.getWarcIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.veidemann.api.CrawlLogListRequest.prototype.setWarcIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.CrawlLogListRequest.prototype.addWarcId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListRequest.prototype, "warcIdList", {
  set: function(value) {
    this.setWarcIdList(value);
  },
  get: function() {
    return this.getWarcIdList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlLogListRequest.prototype.clearWarcIdList = function() {
  this.setWarcIdList([]);
};


/**
 * optional string execution_id = 2;
 * @return {string}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlLogListRequest.prototype.setExecutionId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListRequest.prototype, "executionId", {
  set: function(value) {
    this.setExecutionId(value);
  },
  get: function() {
    return this.getExecutionId();
  },
});


/**
 * repeated Filter filter = 3;
 * @return {!Array<!proto.veidemann.api.Filter>}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.getFilterList = function() {
  return /** @type{!Array<!proto.veidemann.api.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.Filter, 3));
};


/** @param {!Array<!proto.veidemann.api.Filter>} value */
proto.veidemann.api.CrawlLogListRequest.prototype.setFilterList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.veidemann.api.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.Filter}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.addFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.veidemann.api.Filter, opt_index);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListRequest.prototype, "filterList", {
  set: function(value) {
    this.setFilterList(value);
  },
  get: function() {
    return this.getFilterList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlLogListRequest.prototype.clearFilterList = function() {
  this.setFilterList([]);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLogListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListRequest.prototype, "pageSize", {
  set: function(value) {
    this.setPageSize(value);
  },
  get: function() {
    return this.getPageSize();
  },
});


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlLogListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLogListRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListRequest.prototype, "page", {
  set: function(value) {
    this.setPage(value);
  },
  get: function() {
    return this.getPage();
  },
});



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlLogListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlLogListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlLogListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlLogListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlLogListReply.toObject = function(includeInstance, msg) {
  var obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    frontier_v1_resources_pb.CrawlLog.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlLogListReply}
 */
proto.veidemann.api.CrawlLogListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlLogListReply;
  return proto.veidemann.api.CrawlLogListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlLogListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlLogListReply}
 */
proto.veidemann.api.CrawlLogListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new frontier_v1_resources_pb.CrawlLog;
      reader.readMessage(value,frontier_v1_resources_pb.CrawlLog.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlLogListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlLogListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlLogListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlLogListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      frontier_v1_resources_pb.CrawlLog.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated frontier.v1.CrawlLog value = 1;
 * @return {!Array<!proto.veidemann.api.frontier.v1.CrawlLog>}
 */
proto.veidemann.api.CrawlLogListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.frontier.v1.CrawlLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, frontier_v1_resources_pb.CrawlLog, 1));
};


/** @param {!Array<!proto.veidemann.api.frontier.v1.CrawlLog>} value */
proto.veidemann.api.CrawlLogListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.frontier.v1.CrawlLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.frontier.v1.CrawlLog}
 */
proto.veidemann.api.CrawlLogListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.frontier.v1.CrawlLog, opt_index);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListReply.prototype, "valueList", {
  set: function(value) {
    this.setValueList(value);
  },
  get: function() {
    return this.getValueList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlLogListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlLogListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLogListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListReply.prototype, "count", {
  set: function(value) {
    this.setCount(value);
  },
  get: function() {
    return this.getCount();
  },
});


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlLogListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLogListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListReply.prototype, "pageSize", {
  set: function(value) {
    this.setPageSize(value);
  },
  get: function() {
    return this.getPageSize();
  },
});


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlLogListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLogListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


Object.defineProperty(proto.veidemann.api.CrawlLogListReply.prototype, "page", {
  set: function(value) {
    this.setPage(value);
  },
  get: function() {
    return this.getPage();
  },
});



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.PageLogListRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.PageLogListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.PageLogListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.PageLogListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PageLogListRequest.toObject = function(includeInstance, msg) {
  var obj = {
    warcIdList: jspb.Message.getRepeatedField(msg, 1),
    executionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filterList: jspb.Message.toObjectList(msg.getFilterList(),
    proto.veidemann.api.Filter.toObject, includeInstance),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.PageLogListRequest}
 */
proto.veidemann.api.PageLogListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.PageLogListRequest;
  return proto.veidemann.api.PageLogListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.PageLogListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.PageLogListRequest}
 */
proto.veidemann.api.PageLogListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addWarcId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 3:
      var value = new proto.veidemann.api.Filter;
      reader.readMessage(value,proto.veidemann.api.Filter.deserializeBinaryFromReader);
      msg.addFilter(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.PageLogListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.PageLogListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.PageLogListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PageLogListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWarcIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.veidemann.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated string warc_id = 1;
 * @return {!Array<string>}
 */
proto.veidemann.api.PageLogListRequest.prototype.getWarcIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.veidemann.api.PageLogListRequest.prototype.setWarcIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.PageLogListRequest.prototype.addWarcId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


Object.defineProperty(proto.veidemann.api.PageLogListRequest.prototype, "warcIdList", {
  set: function(value) {
    this.setWarcIdList(value);
  },
  get: function() {
    return this.getWarcIdList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.PageLogListRequest.prototype.clearWarcIdList = function() {
  this.setWarcIdList([]);
};


/**
 * optional string execution_id = 2;
 * @return {string}
 */
proto.veidemann.api.PageLogListRequest.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.PageLogListRequest.prototype.setExecutionId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.PageLogListRequest.prototype, "executionId", {
  set: function(value) {
    this.setExecutionId(value);
  },
  get: function() {
    return this.getExecutionId();
  },
});


/**
 * repeated Filter filter = 3;
 * @return {!Array<!proto.veidemann.api.Filter>}
 */
proto.veidemann.api.PageLogListRequest.prototype.getFilterList = function() {
  return /** @type{!Array<!proto.veidemann.api.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.Filter, 3));
};


/** @param {!Array<!proto.veidemann.api.Filter>} value */
proto.veidemann.api.PageLogListRequest.prototype.setFilterList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.veidemann.api.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.Filter}
 */
proto.veidemann.api.PageLogListRequest.prototype.addFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.veidemann.api.Filter, opt_index);
};


Object.defineProperty(proto.veidemann.api.PageLogListRequest.prototype, "filterList", {
  set: function(value) {
    this.setFilterList(value);
  },
  get: function() {
    return this.getFilterList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.PageLogListRequest.prototype.clearFilterList = function() {
  this.setFilterList([]);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.PageLogListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.PageLogListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.PageLogListRequest.prototype, "pageSize", {
  set: function(value) {
    this.setPageSize(value);
  },
  get: function() {
    return this.getPageSize();
  },
});


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.PageLogListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.PageLogListRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


Object.defineProperty(proto.veidemann.api.PageLogListRequest.prototype, "page", {
  set: function(value) {
    this.setPage(value);
  },
  get: function() {
    return this.getPage();
  },
});



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.PageLogListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.PageLogListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.PageLogListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.PageLogListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PageLogListReply.toObject = function(includeInstance, msg) {
  var obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    frontier_v1_resources_pb.PageLog.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.PageLogListReply}
 */
proto.veidemann.api.PageLogListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.PageLogListReply;
  return proto.veidemann.api.PageLogListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.PageLogListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.PageLogListReply}
 */
proto.veidemann.api.PageLogListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new frontier_v1_resources_pb.PageLog;
      reader.readMessage(value,frontier_v1_resources_pb.PageLog.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.PageLogListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.PageLogListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.PageLogListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PageLogListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      frontier_v1_resources_pb.PageLog.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated frontier.v1.PageLog value = 1;
 * @return {!Array<!proto.veidemann.api.frontier.v1.PageLog>}
 */
proto.veidemann.api.PageLogListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.frontier.v1.PageLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, frontier_v1_resources_pb.PageLog, 1));
};


/** @param {!Array<!proto.veidemann.api.frontier.v1.PageLog>} value */
proto.veidemann.api.PageLogListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.frontier.v1.PageLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.frontier.v1.PageLog}
 */
proto.veidemann.api.PageLogListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.frontier.v1.PageLog, opt_index);
};


Object.defineProperty(proto.veidemann.api.PageLogListReply.prototype, "valueList", {
  set: function(value) {
    this.setValueList(value);
  },
  get: function() {
    return this.getValueList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.PageLogListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.PageLogListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.PageLogListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.PageLogListReply.prototype, "count", {
  set: function(value) {
    this.setCount(value);
  },
  get: function() {
    return this.getCount();
  },
});


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.PageLogListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.PageLogListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.PageLogListReply.prototype, "pageSize", {
  set: function(value) {
    this.setPageSize(value);
  },
  get: function() {
    return this.getPageSize();
  },
});


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.PageLogListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.PageLogListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


Object.defineProperty(proto.veidemann.api.PageLogListReply.prototype, "page", {
  set: function(value) {
    this.setPage(value);
  },
  get: function() {
    return this.getPage();
  },
});



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.ScreenshotListRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.ScreenshotListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.ScreenshotListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ScreenshotListRequest.toObject = function(includeInstance, msg) {
  var obj = {
    idList: jspb.Message.getRepeatedField(msg, 1),
    executionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filterList: jspb.Message.toObjectList(msg.getFilterList(),
    proto.veidemann.api.Filter.toObject, includeInstance),
    imgData: jspb.Message.getFieldWithDefault(msg, 4, false),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.ScreenshotListRequest}
 */
proto.veidemann.api.ScreenshotListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.ScreenshotListRequest;
  return proto.veidemann.api.ScreenshotListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.ScreenshotListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.ScreenshotListRequest}
 */
proto.veidemann.api.ScreenshotListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 3:
      var value = new proto.veidemann.api.Filter;
      reader.readMessage(value,proto.veidemann.api.Filter.deserializeBinaryFromReader);
      msg.addFilter(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImgData(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.ScreenshotListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.ScreenshotListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ScreenshotListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.veidemann.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getImgData();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.veidemann.api.ScreenshotListRequest.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.ScreenshotListRequest.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListRequest.prototype, "idList", {
  set: function(value) {
    this.setIdList(value);
  },
  get: function() {
    return this.getIdList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.ScreenshotListRequest.prototype.clearIdList = function() {
  this.setIdList([]);
};


/**
 * optional string execution_id = 2;
 * @return {string}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.ScreenshotListRequest.prototype.setExecutionId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListRequest.prototype, "executionId", {
  set: function(value) {
    this.setExecutionId(value);
  },
  get: function() {
    return this.getExecutionId();
  },
});


/**
 * repeated Filter filter = 3;
 * @return {!Array<!proto.veidemann.api.Filter>}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.getFilterList = function() {
  return /** @type{!Array<!proto.veidemann.api.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.Filter, 3));
};


/** @param {!Array<!proto.veidemann.api.Filter>} value */
proto.veidemann.api.ScreenshotListRequest.prototype.setFilterList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.veidemann.api.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.Filter}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.addFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.veidemann.api.Filter, opt_index);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListRequest.prototype, "filterList", {
  set: function(value) {
    this.setFilterList(value);
  },
  get: function() {
    return this.getFilterList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.ScreenshotListRequest.prototype.clearFilterList = function() {
  this.setFilterList([]);
};


/**
 * optional bool img_data = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.getImgData = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.veidemann.api.ScreenshotListRequest.prototype.setImgData = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListRequest.prototype, "imgData", {
  set: function(value) {
    this.setImgData(value);
  },
  get: function() {
    return this.getImgData();
  },
});


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.ScreenshotListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListRequest.prototype, "pageSize", {
  set: function(value) {
    this.setPageSize(value);
  },
  get: function() {
    return this.getPageSize();
  },
});


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.ScreenshotListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.ScreenshotListRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListRequest.prototype, "page", {
  set: function(value) {
    this.setPage(value);
  },
  get: function() {
    return this.getPage();
  },
});



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.ScreenshotListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.ScreenshotListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.ScreenshotListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.ScreenshotListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ScreenshotListReply.toObject = function(includeInstance, msg) {
  var obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_messages_pb.Screenshot.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.ScreenshotListReply}
 */
proto.veidemann.api.ScreenshotListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.ScreenshotListReply;
  return proto.veidemann.api.ScreenshotListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.ScreenshotListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.ScreenshotListReply}
 */
proto.veidemann.api.ScreenshotListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_messages_pb.Screenshot;
      reader.readMessage(value,veidemann_api_messages_pb.Screenshot.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.ScreenshotListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.ScreenshotListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.ScreenshotListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ScreenshotListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_messages_pb.Screenshot.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated Screenshot value = 1;
 * @return {!Array<!proto.veidemann.api.Screenshot>}
 */
proto.veidemann.api.ScreenshotListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.Screenshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_messages_pb.Screenshot, 1));
};


/** @param {!Array<!proto.veidemann.api.Screenshot>} value */
proto.veidemann.api.ScreenshotListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.Screenshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.Screenshot}
 */
proto.veidemann.api.ScreenshotListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.Screenshot, opt_index);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListReply.prototype, "valueList", {
  set: function(value) {
    this.setValueList(value);
  },
  get: function() {
    return this.getValueList();
  },
});


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.ScreenshotListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.ScreenshotListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.ScreenshotListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListReply.prototype, "count", {
  set: function(value) {
    this.setCount(value);
  },
  get: function() {
    return this.getCount();
  },
});


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.ScreenshotListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.ScreenshotListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListReply.prototype, "pageSize", {
  set: function(value) {
    this.setPageSize(value);
  },
  get: function() {
    return this.getPageSize();
  },
});


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.ScreenshotListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.ScreenshotListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


Object.defineProperty(proto.veidemann.api.ScreenshotListReply.prototype, "page", {
  set: function(value) {
    this.setPage(value);
  },
  get: function() {
    return this.getPage();
  },
});





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.ExecuteDbQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.ExecuteDbQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.ExecuteDbQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ExecuteDbQueryRequest.toObject = function(includeInstance, msg) {
  var obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.ExecuteDbQueryRequest}
 */
proto.veidemann.api.ExecuteDbQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.ExecuteDbQueryRequest;
  return proto.veidemann.api.ExecuteDbQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.ExecuteDbQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.ExecuteDbQueryRequest}
 */
proto.veidemann.api.ExecuteDbQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.ExecuteDbQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.ExecuteDbQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.ExecuteDbQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ExecuteDbQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.veidemann.api.ExecuteDbQueryRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.ExecuteDbQueryRequest.prototype.setQuery = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


Object.defineProperty(proto.veidemann.api.ExecuteDbQueryRequest.prototype, "query", {
  set: function(value) {
    this.setQuery(value);
  },
  get: function() {
    return this.getQuery();
  },
});


/**
 * optional int32 limit = 14;
 * @return {number}
 */
proto.veidemann.api.ExecuteDbQueryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.ExecuteDbQueryRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


Object.defineProperty(proto.veidemann.api.ExecuteDbQueryRequest.prototype, "limit", {
  set: function(value) {
    this.setLimit(value);
  },
  get: function() {
    return this.getLimit();
  },
});





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.ExecuteDbQueryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.ExecuteDbQueryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.ExecuteDbQueryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ExecuteDbQueryReply.toObject = function(includeInstance, msg) {
  var obj = {
    record: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.ExecuteDbQueryReply}
 */
proto.veidemann.api.ExecuteDbQueryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.ExecuteDbQueryReply;
  return proto.veidemann.api.ExecuteDbQueryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.ExecuteDbQueryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.ExecuteDbQueryReply}
 */
proto.veidemann.api.ExecuteDbQueryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.ExecuteDbQueryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.ExecuteDbQueryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.ExecuteDbQueryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ExecuteDbQueryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecord();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string record = 1;
 * @return {string}
 */
proto.veidemann.api.ExecuteDbQueryReply.prototype.getRecord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.ExecuteDbQueryReply.prototype.setRecord = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


Object.defineProperty(proto.veidemann.api.ExecuteDbQueryReply.prototype, "record", {
  set: function(value) {
    this.setRecord(value);
  },
  get: function() {
    return this.getRecord();
  },
});


goog.object.extend(exports, proto.veidemann.api);
